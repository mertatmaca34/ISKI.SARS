@model ISKI.SARS.WebUI.Areas.Register.ViewModels.RegisterViewModel

@{
    Layout = null;
    ViewData["Title"] = "Kayıt Ol";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>

<body class="min-h-screen flex items-center justify-center bg-blue-50">

    <div class="max-w-md w-full space-y-8">
        <div class="text-center">
            <h1 class="text-5xl font-bold text-blue-700">SARS</h1>
            <p class="mt-2 text-lg text-blue-600">Scada Arşivleme ve Raporlama Sistemi</p>
        </div>

        <form asp-action="Index" method="post" id="registerForm" class="mt-8 space-y-6" novalidate>
            @Html.AntiForgeryToken()

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
                    <strong class="font-bold">Hata:</strong>
                    <span class="block sm:inline">Girdiğiniz bilgileri kontrol ediniz.</span>
                </div>
            }

            <div class="space-y-4 text-gray-800">
                <div>
                    <input asp-for="FirstName" placeholder="Ad" class="w-full px-3 py-2 border border-gray-300 rounded" />
                    <span class="text-sm text-red-600 hidden" id="firstNameError">Sadece harf giriniz.</span>
                    <span asp-validation-for="FirstName" class="text-red-600 text-sm"></span>
                </div>

                <div>
                    <input asp-for="LastName" placeholder="Soyad" class="w-full px-3 py-2 border border-gray-300 rounded" />
                    <span class="text-sm text-red-600 hidden" id="lastNameError">Sadece harf giriniz.</span>
                    <span asp-validation-for="LastName" class="text-red-600 text-sm"></span>
                </div>

                <div>
                    <input asp-for="Email" type="email" placeholder="E-Posta" class="w-full px-3 py-2 border border-gray-300 rounded" />
                    <span class="text-sm text-red-600 hidden" id="emailError">Geçerli bir email giriniz.</span>
                    <span asp-validation-for="Email" class="text-red-600 text-sm"></span>
                </div>

                <div>
                    <input asp-for="Password" type="password" placeholder="Şifre" class="w-full px-3 py-2 border border-gray-300 rounded" />
                    <span asp-validation-for="Password" class="text-red-600 text-sm"></span>
                </div>

                <div>
                    <input asp-for="ConfirmPassword" type="password" placeholder="Şifre (Tekrar)" class="w-full px-3 py-2 border border-gray-300 rounded" />
                    <span asp-validation-for="ConfirmPassword" class="text-red-600 text-sm"></span>
                </div>
            </div>

            <div class="space-y-4">
                <button type="submit" id="registerBtn" disabled class="w-full py-2 px-4 bg-blue-600 text-white font-medium rounded opacity-50 cursor-not-allowed hover:bg-blue-700">
                    Kaydol
                </button>

                <p class="text-center text-sm text-gray-600">
                    Zaten hesabınız var mı? <a href="/Login/Login/Index" class="text-blue-600 hover:underline">Giriş yap</a>
                </p>
            </div>
        </form>
    </div>

    <script>
        const form = document.getElementById("registerForm");
        const btn = document.getElementById("registerBtn");

        const firstName = document.querySelector("input[name='FirstName']");
        const lastName = document.querySelector("input[name='LastName']");
        const email = document.querySelector("input[name='Email']");

        const firstNameError = document.getElementById("firstNameError");
        const lastNameError = document.getElementById("lastNameError");
        const emailError = document.getElementById("emailError");

        let touched = {
            firstName: false,
            lastName: false,
            email: false
        };

        function validate() {
            const nameRegex = /^[A-Za-zÇçĞğİıÖöŞşÜü\s]+$/;
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;

            const isFirstValid = nameRegex.test(firstName.value.trim());
            const isLastValid = nameRegex.test(lastName.value.trim());
            const isEmailValid = emailRegex.test(email.value.trim());

            if (touched.firstName) {
                firstNameError.classList.toggle("hidden", isFirstValid);
            }
            if (touched.lastName) {
                lastNameError.classList.toggle("hidden", isLastValid);
            }
            if (touched.email) {
                emailError.classList.toggle("hidden", isEmailValid);
            }

            const allValid = isFirstValid && isLastValid && isEmailValid;
            btn.disabled = !allValid;
            btn.classList.toggle("opacity-50", !allValid);
            btn.classList.toggle("cursor-not-allowed", !allValid);
        }

        firstName.addEventListener("input", () => {
            touched.firstName = true;
            validate();
        });

        lastName.addEventListener("input", () => {
            touched.lastName = true;
            validate();
        });

        email.addEventListener("input", () => {
            touched.email = true;
            validate();
        });

        window.onload = () => {
            btn.disabled = true;
            btn.classList.add("opacity-50", "cursor-not-allowed");
        };
    </script>

</body>
</html>
