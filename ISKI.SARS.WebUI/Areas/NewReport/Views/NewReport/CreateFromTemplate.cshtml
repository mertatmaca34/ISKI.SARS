@model ISKI.SARS.WebUI.Areas.NewReport.ViewModels.NewReportFromTemplateViewModel
@{
    ViewData["Title"] = "Şablondan Rapor";
}
<div class="p-6">
    <h2 class="text-2xl font-bold mb-4">Şablon: @Model.SelectedTemplate.Name</h2>
    <form method="post">
        <div class="grid grid-cols-2 gap-6">
            <div>
                <label class="block font-semibold mb-2">Taglar</label>
                <div class="flex flex-col space-y-2">
                    @foreach (var tag in Model.AllTags)
                    {
                        <label class="flex items-center space-x-2">
                            <input type="checkbox" id="tag-@tag.Id" name="SelectedTags" value="@tag.TagNodeId" data-tag-name="@tag.TagName" class="form-checkbox tag-checkbox" />
                            <span>@tag.TagName (@tag.TagNodeId)</span>
                        </label>
                    }
                </div>
            </div>

            <div>
                <label class="block font-semibold mb-2">Seçili Taglar</label>
                <div id="selectedTagsContainer" class="flex flex-col space-y-2"></div>
            </div>
        </div>
    </form>

    <script>
        document.querySelectorAll('.tag-checkbox').forEach(cb => {
            cb.addEventListener('change', function () {
                const container = document.getElementById('selectedTagsContainer');
                const existing = container.querySelector(`[data-checkbox-id="${this.id}"]`);

                if (this.checked) {
                    if (existing) return;
                    const chip = document.createElement('span');
                    chip.className = 'bg-blue-100 px-2 py-1 rounded flex items-center space-x-1 mb-1';
                    chip.dataset.checkboxId = this.id;

                    const text = document.createElement('span');
                    text.textContent = `${this.dataset.tagName} (${this.value})`;

                    const removeBtn = document.createElement('button');
                    removeBtn.type = 'button';
                    removeBtn.textContent = '✕';
                    removeBtn.className = 'text-red-500 hover:text-red-700';
                    removeBtn.addEventListener('click', () => {
                        this.checked = false;
                        chip.remove();
                    });

                    chip.appendChild(text);
                    chip.appendChild(removeBtn);
                    container.appendChild(chip);
                } else {
                    if (existing) existing.remove();
                }
            });
        });
    </script>
</div>
